
# ls app, default app
___x_cmd_pkg_ls()(
    ___x_cmd_pkg___which_p7zip || return

    case "$1" in
        */*/*)
                cd "$___X_CMD_PKG_RAWPATH" || return

                local pkg_pat=${1%%/*}
                local version_pat=${1#"$pkg_pat"/}
                local file_pat="${version_pat#*/}"
                version_pat="${version_pat#"$file_pat"/}"

                for pkg in "$___X_CMD_PKG_INSTALL_PATH"/*; do
                    [ "${pkg#*"$pkg_pat"*}" != "$pkg" ] || continue
                    printf "%s\n" "$pkg"
                    for version in "$___X_CMD_PKG_INSTALL_PATH/$pkg"/*; do
                        [ "${version%.___x_cmd_pkg_install_tmp}" != "$version" ] || continue
                        [ "${version#*"$version_pat"*}" != "$version" ]
                        printf "\t- %s\n" "$version"
                    done
                done
                ;;
        */*)
                cd "$___X_CMD_PKG_RAWPATH" || return
                local pkg_pat=${1%%/*}
                local version_pat=${1#*/}
                for pkg in "$___X_CMD_PKG_INSTALL_PATH"/*; do
                    [ "${pkg#*"$pkg_pat"*}" != "$pkg" ] || continue
                    printf "%s\n" "$pkg"
                    for version in "$___X_CMD_PKG_INSTALL_PATH/$pkg"/*; do
                        [ "${version%.___x_cmd_pkg_install_tmp}" != "$version" ] || continue
                        [ "${version#*"$version_pat"*}" != "$version" ]
                        printf "\t- %s\n" "$version"
                    done
                done
                ;;
        *)
                # Read the index file in the future ...
                cd "$___X_CMD_PKG_RAWPATH" || return
                find . -name meta.tt.json | awk  '{ gsub(/\.\//, "", $0); gsub(/\/meta.tt.json$/, "", $0); print $0;  }'
    esac
)


# Those folder without _tmp is success
___x_cmd_pkg_ls_installed(){
    local pkg
    local version
    for pkg in "$___X_CMD_PKG_INSTALL_PATH"/*; do
        printf "%s\n" "$pkg"
        for version in "$___X_CMD_PKG_INSTALL_PATH/$pkg"/*; do
            [ "${version%.___x_cmd_pkg_install_tmp}" != "$version" ] || continue
            printf "\t- %s\n" "$version"
        done
    done
}
