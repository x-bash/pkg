# shellcheck shell=sh disable=SC3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

xrc os/v0

xrc log init static_build

static_build_which(){
    local repo="${1:?Provide repo name, like p7zip}"
    local app="${2:-${repo}}"

    local target="$HOME/.x-cmd/.bin/$app"
    mkdir -p "$target"

    local arch
    arch="$(os arch)"
    local osname
    osname="$(os name)"

    local exe
    case "$osname" in
        win)    exe=$app.x64.exe        ;;
        *)      exe=$app.${osname}.${arch}  ;;
    esac

    # Rely
    if [ ! -f "$target/$exe" ]; then
        # TODO: Use github, gitlab if gitee failed.
        if ! CACHE="$target/$exe.7z" _xrc_curl_gitx static-build "${repo}/bin/$exe.7z"; then
            printf "%s\n" "Unsupported: $exe" >&2
            return 1
        fi

        (
            cd "$target" && {
                local size

                size=$(wc -c "$exe.7z")
                size=${size% *}
                size=$(printf "%s" $size)   # Notice: Intentionary let it unquoted.

                xrc p7zr
                if [ "$size" -gt 20 ]; then
                    p7zr x "$exe.7z" 1>/dev/null 2>/dev/null
                else
                    size="$(cat "$exe.7z")"
                    local i
                    local suffix

                    # TODO: using job for concurrency.
                    for i in $(seq "$size"); do
                        # suffix="$(printf "%03s" "$i")" # Not work in gnu bash
                        suffix="$(printf "%3s" "$i" | tr " " 0)"
                        CACHE="$exe.7z.$suffix" _xrc_curl_gitx static-build "${repo}/bin/$exe.7z.$suffix" || {
                            echo "Fail in $exe.7z.$suffix" >&2
                            return 1
                        }
                    done

                    static_build_log "Using p7zr to decompress: $target/$exe.7z.001"
                    p7zr x "$exe.7z.001" 1>/dev/null 2>/dev/null
                fi && chmod +x "$exe"
            }
        )
    fi && printf "%s" "$target/$exe" && return 0

    return 1
}

static_build_init(){
    local repo="${1:?Provide repo name, like p7zip}"
    local app="${2:-${repo}}"
    local namebin="${3:-_${app}_bin}"

    # if command -v "_${appname}_bin" 1>/dev/null; then
    #     return 0
    # fi

    local path
    if ! path=$(static_build_which "$repo" "$app"); then
        return 1
    fi
    eval "
        $namebin(){
            $path \"\$@\" 
        }
    "
    # \${1:+\"\$@\"}
}

# TODO: Cache static_build_which
static_build_run(){
    local repo="${1:?Provide repo name, like p7zip}"
    local app="${2:?Provide app name, like 7za}"

    local path
    if ! path=$(static_build_which "$repo" "$app"); then
        return 1
    fi
    $path "$@"
}


static_build_xrc(){
    local repo="${1:?Provide repo name, like p7zip}"
    local app="${2:-$repo}"

    static_build_init "$repo" "$app"
}
